/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int length(ListNode* head){
        ListNode*temp=head;
        int count=1;
        while(temp->next!=NULL){
            temp=temp->next;
            count++;
        }
        return count;
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        int ln=length(head);
        if(ln==1){
            return NULL;
        }
        int l=ln-n;
        if(l==0){
            ListNode*temp=head;
            head=head->next;
            delete temp;
            return head;
        }
        int i=1;
        ListNode*slow=head;
        ListNode*fast=slow->next;
        while(i<l){
            slow=slow->next;
            fast=fast->next;
            i++;
        }
        slow->next=fast->next;
        delete fast;
        return head;
    }
};